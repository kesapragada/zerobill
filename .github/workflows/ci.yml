# FILE: .github/workflows/ci.yml

name: ZeroBill CI - Backend Lint & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: "Lint Backend Code"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install Dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run ESLint
        working-directory: ./backend
        run: npm run lint

  build-and-test:
    name: "Build and Test Backend"
    runs-on: ubuntu-latest
    needs: lint
    
    # [FIX] Add a services block to run dependencies as containers.
    # The job will now have a real MongoDB and Redis instance to connect to.
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
      redis:
        image: redis:latest
        ports:
          - 6379:6379

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install Backend Dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run Backend Tests
        working-directory: ./backend
        # [FIX] Run Jest with coverage. The test will fail if coverage drops below the threshold.
        # The environment variables now correctly point to the service containers.
        run: npm test
        env:
          # The hostname 'mongodb' and 'redis' are automatically resolved to the service containers
          MONGO_URI: mongodb://mongodb:27017/zerobill-ci-test
          REDIS_HOST: redis
          REDIS_PORT: 6379
          JWT_SECRET: ${{ secrets.JWT_SECRET || 'test-secret' }}
          JWT_EXPIRES_IN: '1h'
          FRONTEND_URL: http://localhost:3000
          NODE_ENV: 'test' # Ensures Jest runs in test mode

      # [NEW] Add a step to upload the coverage report as a CI artifact.
      # This makes the coverage data accessible and useful.
      - name: Upload coverage reports to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: backend/coverage/